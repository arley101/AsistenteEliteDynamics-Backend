# .github/workflows/deploy-to-azure.yml

name: Deploy EliteDynamicsPro Function App to Azure

on:
  push:
    branches:
      - main # Se ejecuta cuando haces push a la rama main
  workflow_dispatch: # Permite ejecución manual desde la pestaña Actions

env:
  AZURE_FUNCTIONAPP_NAME: EliteDynamicsFuncions   # Nombre exacto de tu Function App en Azure
  PYTHON_VERSION: '3.11'                         # Versión de Python (asegúrate que coincida con Azure)
  FUNCTION_APP_PATH: '.'                         # Ruta a la raíz de tu proyecto donde está host.json

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Ejecuta en un runner Linux de GitHub
    # environment: production # Puedes descomentar si usas entornos y secretos específicos para 'production' en GitHub

    steps:
    # 1. Descarga el código de tu repositorio
    - name: Checkout repository content
      uses: actions/checkout@v4

    # 2. Configura la versión de Python especificada en el runner
    - name: Setup Python version
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip' # Activa caché para acelerar instalación de dependencias en futuras ejecuciones

    # 3. Autentica con Azure usando el Service Principal
    #    El secreto AZURE_CREDENTIALS debe contener el JSON con clientId, clientSecret, tenantId, subscriptionId
    - name: Login via Azure Credentials
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # 4. Despliega el código a Azure Functions
    #    Utiliza la acción de Azure Functions, que empaqueta el código y lo sube.
    #    Confía en Oryx (el sistema de build de Azure) para instalar las dependencias
    #    listadas en requirements.txt directamente en Azure.
    - name: Deploy to Azure Functions
      uses: azure/functions-action@v1
      id: deploy-to-function-app # ID para referenciar este paso si fuera necesario
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }} # Nombre de la app destino
        package: ${{ env.FUNCTION_APP_PATH }}      # Carpeta que contiene el código a empaquetar y desplegar
        # NO se especifican 'python-version' ni 'app-settings' aquí porque no son inputs válidos para esta acción
        # Las App Settings deben estar configuradas directamente en Azure Portal o mediante otros métodos (CLI, ARM, etc.)
        # La versión de Python se configura en el Function App de Azure

    # 5. Cierra la sesión de Azure (buena práctica)
    - name: Azure logout
      run: |
        az logout
      if: always() # Se ejecuta siempre, incluso si el despliegue falla