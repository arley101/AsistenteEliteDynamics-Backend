# .github/workflows/deploy-to-azure.yml

name: Deploy EliteDynamicsPro Function App to Azure # Nombre del workflow

on:
  push:
    branches:
      - main # ❗ CAMBIA 'main' si tu rama principal es otra (ej. 'master')
  workflow_dispatch: # Permite ejecutarlo manualmente desde GitHub

env:
  AZURE_FUNCTIONAPP_NAME: 'NOMBRE_DE_TU_FUNCTION_APP_EXISTENTE' # ⚠️ REEMPLAZA ESTO OBLIGATORIAMENTE
  PYTHON_VERSION: '3.11'
  FUNCTION_APP_PATH: '.' # Ruta raíz del código de la función en el repo

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Usar ejecutor Linux estándar
    environment: production # Opcional, si usas entornos en GitHub

    steps:
    # Paso 1: Descargar el código del repositorio
    - name: Checkout repository content
      uses: actions/checkout@v4

    # Paso 2: Configurar el entorno de Python
    - name: Setup Python version
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip' # Habilitar caché de pip

    # Paso 3: Instalar las dependencias de Python
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Asegúrate que requirements.txt esté en la raíz definida por FUNCTION_APP_PATH
        pip install -r ${{ env.FUNCTION_APP_PATH }}/requirements.txt 

    # Paso 4: Iniciar sesión en Azure (Elige UN método)
    # Método A: Usando Publish Profile (Más simple de obtener)
    - name: 'Login via Azure Publish Profile'
      uses: azure/login@v2
      with:
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} #  sekretua GitHub-en (¡asegúrate que este secreto exista!)

    # Método B: Usando Service Principal (Más seguro y recomendado)
    # Si usas este, comenta o elimina el paso anterior "Login via Azure Publish Profile"
    # - name: 'Login via Azure Credentials'
    #   uses: azure/login@v2
    #   with:
    #     creds: ${{ secrets.AZURE_CREDENTIALS }} # Secreto JSON con credenciales del Service Principal

    # Paso 5: Desplegar en Azure Functions y Configurar App Settings
    - name: 'Deploy to Azure Functions'
      uses: azure/functions-action@v1
      id: deploy-to-function-app
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.FUNCTION_APP_PATH }}
        python-version: ${{ env.PYTHON_VERSION }}
        # Configurar Application Settings usando Secretos de GitHub
        # ❗ VERIFICA que los nombres de secretos aquí coincidan con los que creaste en GitHub
        app-settings: |
          [
            {"name": "FUNCTIONS_WORKER_RUNTIME", "value": "python", "slotSetting": false},
            {"name": "AzureWebJobsStorage", "value": "${{ secrets.AZURE_WEBJOBS_STORAGE }}", "slotSetting": false}, # Necesitarás añadir la cadena de conexión real como secreto
            {"name": "CLIENT_ID", "value": "${{ secrets.CLIENT_ID }}", "slotSetting": false},
            {"name": "CLIENT_SECRET", "value": "${{ secrets.CLIENT_SECRET }}", "slotSetting": true}, # Marcar secretos como slotSetting=true es buena práctica
            {"name": "TENANT_ID", "value": "${{ secrets.TENANT_ID }}", "slotSetting": false},
            {"name": "GRAPH_SCOPE", "value": "${{ secrets.GRAPH_SCOPE || 'https://graph.microsoft.com/.default' }}", "slotSetting": false},
            {"name": "GRAPH_API_ENDPOINT", "value": "${{ secrets.GRAPH_API_ENDPOINT || 'https://graph.microsoft.com/v1.0' }}", "slotSetting": false},
            {"name": "AZURE_OPENAI_ENDPOINT", "value": "${{ secrets.AZURE_OPENAI_ENDPOINT }}", "slotSetting": false},
            {"name": "AZURE_OPENAI_API_VERSION", "value": "${{ secrets.AZURE_OPENAI_API_VERSION || '2024-02-01' }}", "slotSetting": false},
            {"name": "AZURE_OPENAI_SCOPE", "value": "${{ secrets.AZURE_OPENAI_SCOPE || 'https://cognitiveservices.azure.com/.default' }}", "slotSetting": false},
            {"name": "PBI_CLIENT_ID", "value": "${{ secrets.PBI_CLIENT_ID }}", "slotSetting": false},
            {"name": "PBI_CLIENT_SECRET", "value": "${{ secrets.PBI_CLIENT_SECRET }}", "slotSetting": true},
            {"name": "PBI_TENANT_ID", "value": "${{ secrets.PBI_TENANT_ID || secrets.TENANT_ID }}", "slotSetting": false},
            {"name": "GITHUB_PAT", "value": "${{ secrets.GITHUB_PAT }}", "slotSetting": true},
            {"name": "AZURE_CLIENT_ID_MGMT", "value": "${{ secrets.AZURE_CLIENT_ID_MGMT || secrets.CLIENT_ID }}", "slotSetting": false},
            {"name": "AZURE_CLIENT_SECRET_MGMT", "value": "${{ secrets.AZURE_CLIENT_SECRET_MGMT || secrets.CLIENT_SECRET }}", "slotSetting": true},
            {"name": "AZURE_SUBSCRIPTION_ID", "value": "${{ secrets.AZURE_SUBSCRIPTION_ID }}", "slotSetting": false},
            {"name": "AZURE_RESOURCE_GROUP", "value": "${{ secrets.AZURE_RESOURCE_GROUP }}", "slotSetting": false},
            {"name": "APP_NAME", "value": "EliteDynamicsPro", "slotSetting": false}, # Nombre de la App en Azure
            {"name": "SHAREPOINT_MEMORY_LIST_NAME", "value": "${{ secrets.SHAREPOINT_MEMORY_LIST_NAME || 'AsistenteMemoriaPersistente' }}", "slotSetting": false},
            {"name": "DEFAULT_API_TIMEOUT", "value": "${{ secrets.DEFAULT_API_TIMEOUT || '60' }}", "slotSetting": false}
            # Añade aquí CUALQUIER OTRA variable de local.settings.json que necesites en Azure
          ]

    # Paso 6 (Opcional): Cerrar sesión de Azure
    - name: Azure logout
      run: |
        az logout
      if: always() # Ejecutar aunque fallen pasos anteriores