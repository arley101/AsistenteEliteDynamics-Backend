name: Deploy EliteDynamicsFuncionsPremium Function App to Azure

on:
  push:
    branches:
      - main # Se activa en pushes a la rama main
  workflow_dispatch: # Permite activación manual

env:
  AZURE_FUNCTIONAPP_NAME: EliteDynamicsFuncionsPremium
  PYTHON_VERSION: '3.11'
  FUNCTION_APP_WORKING_DIRECTORY: '.' # Directorio de trabajo para los pasos, usualmente la raíz del repo
  # DEPENDENCY_PATH: '.python_packages' # Esta variable no se usa de forma estándar para remote build, la quitaremos.

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # Usar ubuntu-latest está bien si el build es 100% remoto en Azure.

    permissions:
      id-token: write # Necesario para login con OIDC (identidad federada)
      contents: read # Necesario para checkout

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    # ELIMINA ESTOS PASOS DE INSTALACIÓN DE DEPENDENCIAS EN EL RUNNER DE GITHUB:
    # NO queremos construir los paquetes aquí si vamos a hacer remote build en Azure.
    # - name: Install Azure Functions Core Tools (Linux general) # No es necesario para zip deploy si no haces func pack localmente
    #   run: |
    #     npm install -g azure-functions-core-tools@4 --unsafe-perm true

    # - name: Install dependencies # <-- ELIMINAR ESTE PASO COMPLETAMENTE
    #   run: |
    #     python -m pip install --upgrade pip
    #     mkdir -p .python_packages/lib/site-packages # No crear esto en el runner
    #     pip install -r ${{ env.FUNCTION_APP_WORKING_DIRECTORY }}/requirements.txt --target=".python_packages/lib/site-packages"
    #   working-directory: ${{ env.FUNCTION_APP_WORKING_DIRECTORY }}

    - name: Zip artifact for deployment (SOLO CÓDIGO FUENTE)
      run: |
        echo "Creando el paquete zip solo con el código fuente..."
        # Este comando asume que estás en la raíz de tu proyecto después del checkout.
        # Asegúrate de que el contenido del ZIP sea la estructura que Azure Functions espera en wwwroot.
        zip -r ${{ github.workspace }}/function_app_package.zip . \
          -x ".git/*" \
          -x ".github/*" \
          -x ".vscode/*" \
          -x ".idea/*" \
          -x "*.DS_Store" \
          -x "*.sh" \
          -x ".venv/*" \
          -x ".python_packages/*" \
          -x "*/__pycache__/*" \
          -x "*.pyc" \
          -x "tests/*" \
          -x "docs/*" \
          -x "*.zip" \
          -x "local.settings.json" \
          -x "AzuriteConfig/*" \
          -x "__blobstorage__/*" \
          -x "__queuestorage__/*" \
          -x "__azurite*"
      working-directory: ${{ env.FUNCTION_APP_WORKING_DIRECTORY }} # Usualmente github.workspace es suficiente

    - name: Login to Azure with federated identity
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        # enable-AzPSSession: false # Opcional, si no usas PowerShell

    # PASO CRUCIAL: Configurar App Settings para Remote Build ANTES de desplegar
    - name: Set Azure App Settings for Remote Build
      uses: azure/appservice-settings@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }} # Asegúrate de tener esta secret o pon el nombre directo
        # slot-name: 'production' # Opcional si usas slots
        app-settings-json: |
          [
            { "name": "SCM_DO_BUILD_DURING_DEPLOYMENT", "value": "1", "slotSetting": false },
            { "name": "ENABLE_ORYX_BUILD", "value": "1", "slotSetting": false },
            { "name": "WEBSITE_RUN_FROM_PACKAGE", "value": "0", "slotSetting": false },
            { "name": "FUNCTIONS_WORKER_RUNTIME", "value": "python", "slotSetting": false },
            { "name": "FUNCTIONS_EXTENSION_VERSION", "value": "~4", "slotSetting": false },
            { "name": "PYTHONPATH", "value": "/home/site/wwwroot", "slotSetting": false }
          ]
    
    - name: Clear WEBSITE_STARTUP_FILE setting (if exists)
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az functionapp config appsettings delete --name ${{ env.AZURE_FUNCTIONAPP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --setting-names WEBSITE_STARTUP_FILE --output none

    - name: Deploy to Azure Functions using Zip Deploy
      uses: azure/webapps-deploy@v2 # Esta acción es más robusta para zip deploy
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ github.workspace }}/function_app_package.zip # Ruta al ZIP creado
        # publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Alternativa al login OIDC si lo prefieres
        # El remote build se activará por los App Settings SCM_DO_BUILD_DURING_DEPLOYMENT y ENABLE_ORYX_BUILD